<project>
<!--  Git integration macroses -->
<var name="git.error" value="" />
<var name="git.result" value=""/>
<var name="git.output" value=""/>
<var name="git.current.cmd" value="" />
<var name="git.current.repo" value="" />
<macrodef name="git-repo-name">
<sequential>
<git command="config">
<args>
<arg value="--get" />
<arg value="remote.origin.url" />
</args>
</git>
<if>
<equals arg1="${git.result}" arg2="0" />
<then>
<var name="git.current.repo" value="${git.output}" />
<echo>${git.current.repo}</echo>
<sh-run outproperty="gco" line="echo ${git.current.repo} | awk -F/ '{print $NF}'|cut -f1 -d '.git'" />
<var name="git.current.repo" value="${gco}" />
</then>
</if>
</sequential>
</macrodef>

<macrodef name="source-merge">
<attribute name="from" />
<attribute name="to" />
<attribute name="msg" default="" />
<attribute name="stategy" default="ours" />
<sequential>
<record name="${env.TMP}${file.separator}@{id}.soure-merge.log" action="start" />
<git-del branch="temp_${patch.id}" force="true"/>
<git-update branch="@{from}" />
<git-output />
<git-error />
<git-reset branch="@{to}" hard="true" commit="HEAD" />
<git-output />
<git-error />
<git-update branch="@{to}" />
<git-output />
<git-error />
<git-switch branch="@{to}" />
<git-result />
<git-co branch="temp_${patch.id}" />
<echo>Merging changes [@{to} &lt;- @{from}] -&gt; temp_${patch.id}</echo>
<git-merge trimnl="false" from="@{from}"  to="temp_${patch.id}" msg="Merging changes from @{from} branch and @{to} branch into TEMP branch" />
<git-output />
<git-error />
<git-result />
<record name="${env.TMP}${file.separator}@{id}.soure-merge.log" action="stop" />
<if>
<not>
<equals arg1="0" arg2="${git.result}" />
</not>
<then>
<echo>Send SCM report to [ ${developer.mail} ]</echo>
<send-scm-report to="${developer.mail}" logfile="${env.TMP}${file.separator}@{id}.soure-merge.log" />
<fail>
Merging failed. Check your email for detail log.
</fail>
</then>
</if>
<git-add-commit msg="@{msg}${line.separator}This commit is automatically generated by build system" />
<git-result />    
<git-output />
<git-error />
<git-switch branch="@{to}" />
<git-output />
<git-merge from="temp_${patch.id}" to="@{to}" strategy="ours" msg="Transfer prebuild merge results into @{to} branch from temporary" />
<git-output />
</sequential>
</macrodef>
<macrodef name="git-add-commit">
<attribute name="msg" />
<sequential>
<echo>[Git] Add untracked files</echo>
<git command="add">
<args>
<arg value="." />
</args>
</git>
<echo>[Git] Commit changes</echo>
<git command="commit">
<args>
<arg value="-a" />
<arg value="-m" />
<arg value="@{msg}" />
</args>
</git>
</sequential>
 </macrodef>
<macrodef name="git-reset" >
<attribute name="branch" />
<attribute name="commit" default="HEAD" />
<attribute name="hard" default="false" />
<sequential>
<git-co branch="@{branch}" />
<if>
<equals arg1="hard" arg2="false" />
<then>
<git command="reset">
<args>
<arg value="@{commit}" />
</args>
</git>
</then>
<else>
<git command="reset">
<args>
<arg value="--hard" />
<arg value="@{commit}" />
</args>
</git>
</else>
</if>
</sequential>
</macrodef>

<macrodef name="git-add">
<attribute name="all" default="false" />
<element name="file" optional="true" />
<sequential>
<if>
<equals arg1="@{all}" arg2="true" />
<then>
<git command="add">
<args>
<arg value="." />
</args>
</git>
</then>
<else>
<echo>
Selective add not implemented
</echo>
</else>
</if>
</sequential>
</macrodef>
<macrodef name = "git">
    <attribute name = "command" />
    <attribute name = "dir" default = "" />
<attribute name="trimnl"
default="true" />
	 <element name = "args" optional = "true" />
    <sequential>
<var name="git.error" unset="true" />
<var name="git.result" unset="true"/>
<var name="git.output" unset="true"/>
<var name="git.current.cmd" unset="true" />
<if>
<equals arg1="true" arg2="@{trimnl}" />
<then>
<exec resultproperty="git.result" error="${env.TMP}${file.separator}${patch.id}.git.@{command}.err"  output="${env.TMP}${file.separator}${patch.id}.git.@{command}.out" executable = "git" dir = "@{dir}">
            <arg value = "@{command}" />
            <args/>
<redirector>
<outputfilterchain>
<striplinebreaks />
</outputfilterchain>
</redirector>
</exec>
  </then>
<else>
<exec resultproperty="git.result" error="${env.TMP}${file.separator}${patch.id}.git.@{command}.err"  output="${env.TMP}${file.separator}${patch.id}.git.@{command}.out" executable = "git" dir = "@{dir}">
            <arg value = "@{command}" />
            <args/>
</exec>
</else>
</if>
<loadfile quiet="true" property="git.output" srcfile="${env.TMP}${file.separator}${patch.id}.git.@{command}.out" />
<loadfile quiet="true" property="git.error" srcfile="${env.TMP}${file.separator}${patch.id}.git.@{command}.err"  />
<var name="git.error" value="${git.error}" />
<var name="git.output" value="${git.output}" />
<var name="git.result" value="${git.result}" />
<var name="git.current.cmd" value="@{command}" />
<delete quiet="true" file="${env.TMP}${file.separator}${patch.id}.git.@{command}.out" />
<delete quiet="true" file="${env.TMP}${file.separator}${patch.id}.git.@{command}.err"/>
    </sequential>
</macrodef>
<macrodef name="git-output">
<sequential>
<if>
<equals arg1="true" arg2="${quiet.mode}" />
<then></then><else>
<if><and>
<isset property="git.output" />
<not>
<equals arg1="" arg2="git.output" />
</not>
</and>
<then>
<echo>[Git][stdout][ ${git.current.cmd} ] -> ${git.output}</echo>
</then>
</if>
</else></if>
</sequential>
</macrodef>
<macrodef name="git-result">
<sequential>
<if>
<equals arg1="true" arg2="${quiet.mode}" />
<then></then><else>
<if>
<and>
<isset property="git.result" />
<not><equals arg1="${git.result}" arg2="" /></not>
</and>
<then>
<echo>[Git][result][ ${git.current.cmd} ] -> ${git.result}</echo>
</then>
</if>
</else>
</if>
</sequential>
</macrodef>
<macrodef name="git-error">
<sequential>
<if>
<equals arg1="true" arg2="${quiet.mode}" />
<then></then><else>

<if>
<and>
<not>
<equals arg1="" arg2="${git.error}" />
</not>
<isset property="git.error" />
</and>
<then>
<echo>[Git][stderr][ ${git.current.cmd} ] -> ${git.error}</echo>
</then>
</if>
</else>
</if>
</sequential>
</macrodef>
<macrodef name="git-pull">
<attribute name="branch" />
<attribute name="force" default="false" />
<sequential>
<echo> Pulling branch [ @{branch} ] from upstream server </echo>
<if>
<equals arg1="@{force}" arg2="true" />
<then>
<git command="pull">
<args><arg value="@{branch}" />
<arg value="-f"/>
</args>
</git>
</then>
<else>
<git command="pull">
<args>
<arg value="@{branch}" />
</args>
</git>
</else>
</if>
</sequential>
</macrodef>

<macrodef name = "git-clone-pull">
    <attribute name = "repository" />
    <attribute name = "dest" />
    <sequential>
        <git command = "clone">
            <args>
                <arg value = "@{repository}" />
                <arg value = "@{dest}" />
            </args>
        </git>
        <git command = "pull" dir = "@{dest}" />
    </sequential>
</macrodef>
<macrodef name="git-del">
<attribute name="branch" />
<attribute name="force" default="false" />
<sequential>
<echo> Delete branch [ @{branch} ] with FORCE=@{force}</echo>
<if>
<equals arg1="@{force}" arg2="true" />
<then>
<git dir="." command="branch">
<args>
<arg value="-D" />
<arg value="@{branch}" />
</args>
</git>
</then>
<else>
<git dir="." command="branch">
<args>
<arg value="-d" />
<arg value="@{branch}" />
</args>
</git>
</else>
</if>
</sequential>
</macrodef>
<macrodef name="git-switch">
<attribute name="branch" />
<sequential>
<echo> Switch into [ @{branch} ]</echo>
<git dir="." command="checkout">
<args>
<arg value="@{branch}" />
</args>
</git>
</sequential>
</macrodef>
<macrodef name="git-fetch">
<attribute name="branch" />
<sequential>
<echo>Fetch new branch [ @{branch} ] from remote server</echo>
<git dir="." command="checkout">
<args>
<arg value="-b" />
<arg value="@{branch}" />
<arg value="-t" />
<arg value="origin/@{branch}" />
</args>
</git>
<git-output />
</sequential>
</macrodef>
<macrodef name="git-update">
<attribute name="branch" />
<attribute name="commit" default="" />
<sequential>
<echo> Fetch changes for branch [ @{branch} ]  from remote server</echo>
<git dir="." command="remote" trimnl="false">
<args>
<arg value="update" />
</args>
</git>
<git-output />
<git dir="." command="checkout" trimnl="false">
<args>
<arg value="@{branch}" />
</args>
</git>
<git dir="." command="pull" trimnl="false">
<args>
</args>
</git>
</sequential>
</macrodef>
<macrodef name="git-merge">
<attribute name="from" />
<attribute name="to" />
<attribute name="mode" default="--no-ff" />
<attribute name="msg" default="" />
<attribute name="strategy" default="recursive" />
<attribute name="sub-strategy" default="patience" />
<attribute name="trimnl" default="false" />
<sequential>
<echo>Merge changes [ @{from} ] -> [ @{to} ] </echo>
<echo> Switch to target branch [ @{to} ]</echo>
<git-switch branch="@{to}" />
<var name="stg" value="@{strategy}" />
<var name="ostg" value= "@{sub-strategy}" />
<echo>[Git][merge] Strategy      = ${stg}</echo>
<echo>[Git][merge] SubStrategy   = ${ostg}</echo>
<if>
<equals arg1="" arg2="@{msg}" />
<then>
<git command="merge" dir="." trimnl="@{trimnl}">
<args>
<arg value="@{mode}"/>
<arg value="-s" />
<arg value="${stg}" />
<arg value="-X" />
<arg value="${ostg}" />
<arg value="@{from}" />
</args>
</git>
</then>
<else>
<git command="merge" dir="." trimnl="@{trimnl}">
<args>
<arg value="@{mode}"/>
<arg value="@{from}" />
<arg value="-s" />
<arg value="${stg}" />
<arg value="-X" />
<arg value="${ostg}" />
<arg value="-m" />
<arg value="@{msg}" />
</args>
</git>
</else>
</if>
</sequential>
</macrodef>
<macrodef name="git-co">
<attribute name="branch" />
<sequential>
<echo>Create or checkout branch [ @{branch} ]</echo>
<git dir="." command="checkout">
<args>
<arg  value="-B" />
<arg value="@{branch}" />
</args>
</git>
<git-result /> 
</sequential>
</macrodef>
<macrodef name="git-tag">
<attribute name="name" />
<attribute name="msg" />
<attribute name="force" default="false" />
<sequential>
<if>
<equals arg1="@{force}" arg2="true" />
<then>
<git command="tag" dir=".">
<args>
<arg value="-a" />
<arg value="@{name}" />
<arg value="-m" />
<arg value="@{msg}" />
<arg value="-f" />
</args>
</git>
</then>
<else>
<git command="tag" dir=".">
<args>
<arg value="-a" />
<arg value="@{name}" />
<arg value="-m" />  
<arg value="@{msg}" />
<arg value="-f" />
</args>
</git>
</else>
</if>
</sequential>
</macrodef>
<macrodef name="git-push-tags">
<attribute name="tag" default="" />
<sequential>
<if>
<equals arg1="@{tag}" arg2="" />
<then>
<echo>Push all tags to the server</echo>
<git dir="." command="push">
<args>
<arg value="origin" />
<arg value="--tags" />
</args>
</git>
</then>
<else>
<echo>Push tag [ @{tag} ] </echo>
<git command="push" dir=".">
<args>
<arg value="origin" />
<arg value="@{tag}" />
</args>
</git>
</else>
</if>
<git-result />
</sequential>
</macrodef>

<macrodef name="git-push">
<attribute name="branch" />
<sequential>
<echo>Try to push branch [ @{branch} ]</echo>
<git dir="." command="checkout">
<args>
<arg value="@{branch}" />
</args>
</git>
<git dir="." command="push">
<args>
<arg value="origin"/>
<arg value="@{branch}"/>
</args>
</git>
<git-result />
</sequential>
</macrodef>
<var name="git.diff" value="" />
<macrodef name="git-diff-tag">
<attribute name="tag"/>

<sequential>
<git dir="." command="diff-tree" trimnl="false">
<args>
	<arg value="--name-only" />
	<arg value="--no-commit-id" />
	<arg value="-r" />
	<arg value="${branch.current}..@{tag}" />
</args>
</git>
</sequential>
</macrodef>
<macrodef name="git-param">
<attribute name="param" />
<sequential>
<git dir="." command="config">
<args>
<arg value="--get" />
<arg value="@{param}" />
</args>
</git>
</sequential>
</macrodef>
</project>
